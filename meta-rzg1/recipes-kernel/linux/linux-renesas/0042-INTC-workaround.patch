diff --git a/arch/arm/mach-shmobile/board-skrzg1e-reference.c b/arch/arm/mach-shmobile/board-skrzg1e-reference.c
index 263e6cf..0b0e089
--- a/arch/arm/mach-shmobile/board-skrzg1e-reference.c
+++ b/arch/arm/mach-shmobile/board-skrzg1e-reference.c
@@ -250,7 +250,24 @@ static const struct sh_dmae_slave_config r8a7745_sys_dmac_slaves[] = {
 	SYS_DMAC_SLAVE(MSIOF2, 32, 0xe6e00000, 0x50, 0x60, 0x41, 0x42),
 };
 
-static const struct sh_dmae_channel r8a7745_sys_dmac_channels[] = {
+static const struct sh_dmae_channel r8a7745_sys_dmac_channels_low[] = {
+	DMAE_CHANNEL(0x8080, 1),
+	DMAE_CHANNEL(0x8100, 2),
+	DMAE_CHANNEL(0x8180, 3),
+	DMAE_CHANNEL(0x8200, 4),
+	DMAE_CHANNEL(0x8280, 5),
+	DMAE_CHANNEL(0x8300, 6),
+	DMAE_CHANNEL(0x8380, 7),
+	DMAE_CHANNEL(0x8400, 8),
+	DMAE_CHANNEL(0x8480, 9),
+	DMAE_CHANNEL(0x8500, 10),
+	DMAE_CHANNEL(0x8580, 11),
+	DMAE_CHANNEL(0x8600, 12),
+	DMAE_CHANNEL(0x8680, 13),
+	DMAE_CHANNEL(0x8700, 14),
+};
+
+static const struct sh_dmae_channel r8a7745_sys_dmac_channels_high[] = {
 	DMAE_CHANNEL(0x8000, 0),
 	DMAE_CHANNEL(0x8080, 1),
 	DMAE_CHANNEL(0x8100, 2),
@@ -268,28 +285,46 @@ static const struct sh_dmae_channel r8a7745_sys_dmac_channels[] = {
 	DMAE_CHANNEL(0x8700, 14),
 };
 
-static struct sh_dmae_pdata r8a7745_sys_dmac_platform_data = {
-	.slave		= r8a7745_sys_dmac_slaves,
-	.slave_num	= ARRAY_SIZE(r8a7745_sys_dmac_slaves),
-	.channel	= r8a7745_sys_dmac_channels,
-	.channel_num	= ARRAY_SIZE(r8a7745_sys_dmac_channels),
-	.ts_low_shift	= TS_LOW_SHIFT,
-	.ts_low_mask	= TS_LOW_BIT << TS_LOW_SHIFT,
-	.ts_high_shift	= TS_HI_SHIFT,
-	.ts_high_mask	= TS_HI_BIT << TS_HI_SHIFT,
-	.ts_shift	= dma_ts_shift,
-	.ts_shift_num	= ARRAY_SIZE(dma_ts_shift),
-	.dmaor_init	= DMAOR_DME,
-	.chclr_present	= 1,
-	.chclr_bitwise	= 1,
-	.fourty_bits_addr = 1,
+static struct sh_dmae_pdata r8a7745_sys_dmac_platform_data[] = {
+	{
+		.slave		= r8a7745_sys_dmac_slaves,
+		.slave_num	= ARRAY_SIZE(r8a7745_sys_dmac_slaves),
+		.channel	= r8a7745_sys_dmac_channels_low,
+		.channel_num	= ARRAY_SIZE(r8a7745_sys_dmac_channels_low),
+		.ts_low_shift	= TS_LOW_SHIFT,
+		.ts_low_mask	= TS_LOW_BIT << TS_LOW_SHIFT,
+		.ts_high_shift	= TS_HI_SHIFT,
+		.ts_high_mask	= TS_HI_BIT << TS_HI_SHIFT,
+		.ts_shift	= dma_ts_shift,
+		.ts_shift_num	= ARRAY_SIZE(dma_ts_shift),
+		.dmaor_init	= DMAOR_DME,
+		.chclr_present	= 1,
+		.chclr_bitwise	= 1,
+		.fourty_bits_addr = 1,
+	},
+	{
+		.slave		= r8a7745_sys_dmac_slaves,
+		.slave_num	= ARRAY_SIZE(r8a7745_sys_dmac_slaves),
+		.channel	= r8a7745_sys_dmac_channels_high,
+		.channel_num	= ARRAY_SIZE(r8a7745_sys_dmac_channels_high),
+		.ts_low_shift	= TS_LOW_SHIFT,
+		.ts_low_mask	= TS_LOW_BIT << TS_LOW_SHIFT,
+		.ts_high_shift	= TS_HI_SHIFT,
+		.ts_high_mask	= TS_HI_BIT << TS_HI_SHIFT,
+		.ts_shift	= dma_ts_shift,
+		.ts_shift_num	= ARRAY_SIZE(dma_ts_shift),
+		.dmaor_init	= DMAOR_DME,
+		.chclr_present	= 1,
+		.chclr_bitwise	= 1,
+		.fourty_bits_addr = 1,
+	},
 };
 
 static struct resource r8a7745_sys_dmac_resources[] = {
 	/* Channel registers and DMAOR for low */
 	DEFINE_RES_MEM(0xe6700020, 0x8763 - 0x20),
 	DEFINE_RES_IRQ(gic_spi(197)),
-	DEFINE_RES_NAMED(gic_spi(200), 15, NULL, IORESOURCE_IRQ),
+	DEFINE_RES_NAMED(gic_spi(201), 14, NULL, IORESOURCE_IRQ),
 
 	/* Channel registers and DMAOR for high */
 	DEFINE_RES_MEM(0xe6720020, 0x8763 - 0x20),
@@ -302,8 +337,8 @@ static struct resource r8a7745_sys_dmac_resources[] = {
 	platform_device_register_resndata(			\
 		&platform_bus, "sh-dma-engine", 2 + id,		\
 		&r8a7745_sys_dmac_resources[id * 3],	id * 1 + 3,	\
-		&r8a7745_sys_dmac_platform_data,		\
-		sizeof(r8a7745_sys_dmac_platform_data))
+		&r8a7745_sys_dmac_platform_data[id],		\
+		sizeof(r8a7745_sys_dmac_platform_data[id]))
 
 static void __init skrzg1e_add_dmac_prototype(void)
 {

diff --git a/arch/arm/mach-shmobile/board-skrzg1m-reference.c b/arch/arm/mach-shmobile/board-skrzg1m-reference.c
index 8f57a95..81dcf338
--- a/arch/arm/mach-shmobile/board-skrzg1m-reference.c
+++ b/arch/arm/mach-shmobile/board-skrzg1m-reference.c
@@ -235,7 +235,24 @@ static const struct sh_dmae_slave_config r8a7743_sys_dmac_slaves[] = {
 	SYS_DMAC_SLAVE(MSIOF2, 32, 0xe6e00000, 0x50, 0x60, 0x41, 0x42),
 };
 
-static const struct sh_dmae_channel r8a7743_sys_dmac_channels[] = {
+static const struct sh_dmae_channel r8a7743_sys_dmac_channels_low[] = {
+	DMAE_CHANNEL(0x8080, 1),
+	DMAE_CHANNEL(0x8100, 2),
+	DMAE_CHANNEL(0x8180, 3),
+	DMAE_CHANNEL(0x8200, 4),
+	DMAE_CHANNEL(0x8280, 5),
+	DMAE_CHANNEL(0x8300, 6),
+	DMAE_CHANNEL(0x8380, 7),
+	DMAE_CHANNEL(0x8400, 8),
+	DMAE_CHANNEL(0x8480, 9),
+	DMAE_CHANNEL(0x8500, 10),
+	DMAE_CHANNEL(0x8580, 11),
+	DMAE_CHANNEL(0x8600, 12),
+	DMAE_CHANNEL(0x8680, 13),
+	DMAE_CHANNEL(0x8700, 14),
+};
+
+static const struct sh_dmae_channel r8a7743_sys_dmac_channels_high[] = {
 	DMAE_CHANNEL(0x8000, 0),
 	DMAE_CHANNEL(0x8080, 1),
 	DMAE_CHANNEL(0x8100, 2),
@@ -253,28 +270,46 @@ static const struct sh_dmae_channel r8a7743_sys_dmac_channels[] = {
 	DMAE_CHANNEL(0x8700, 14),
 };
 
-static struct sh_dmae_pdata r8a7743_sys_dmac_platform_data = {
-	.slave		= r8a7743_sys_dmac_slaves,
-	.slave_num	= ARRAY_SIZE(r8a7743_sys_dmac_slaves),
-	.channel	= r8a7743_sys_dmac_channels,
-	.channel_num	= ARRAY_SIZE(r8a7743_sys_dmac_channels),
-	.ts_low_shift	= TS_LOW_SHIFT,
-	.ts_low_mask	= TS_LOW_BIT << TS_LOW_SHIFT,
-	.ts_high_shift	= TS_HI_SHIFT,
-	.ts_high_mask	= TS_HI_BIT << TS_HI_SHIFT,
-	.ts_shift	= dma_ts_shift,
-	.ts_shift_num	= ARRAY_SIZE(dma_ts_shift),
-	.dmaor_init	= DMAOR_DME,
-	.chclr_present	= 1,
-	.chclr_bitwise	= 1,
-	.fourty_bits_addr = 1,
+static struct sh_dmae_pdata r8a7743_sys_dmac_platform_data[] = {
+	{
+		.slave		= r8a7743_sys_dmac_slaves,
+		.slave_num	= ARRAY_SIZE(r8a7743_sys_dmac_slaves),
+		.channel	= r8a7743_sys_dmac_channels_low,
+		.channel_num	= ARRAY_SIZE(r8a7743_sys_dmac_channels_low),
+		.ts_low_shift	= TS_LOW_SHIFT,
+		.ts_low_mask	= TS_LOW_BIT << TS_LOW_SHIFT,
+		.ts_high_shift	= TS_HI_SHIFT,
+		.ts_high_mask	= TS_HI_BIT << TS_HI_SHIFT,
+		.ts_shift	= dma_ts_shift,
+		.ts_shift_num	= ARRAY_SIZE(dma_ts_shift),
+		.dmaor_init	= DMAOR_DME,
+		.chclr_present	= 1,
+		.chclr_bitwise	= 1,
+		.fourty_bits_addr = 1,
+	},
+	{
+		.slave		= r8a7743_sys_dmac_slaves,
+		.slave_num	= ARRAY_SIZE(r8a7743_sys_dmac_slaves),
+		.channel	= r8a7743_sys_dmac_channels_high,
+		.channel_num	= ARRAY_SIZE(r8a7743_sys_dmac_channels_high),
+		.ts_low_shift	= TS_LOW_SHIFT,
+		.ts_low_mask	= TS_LOW_BIT << TS_LOW_SHIFT,
+		.ts_high_shift	= TS_HI_SHIFT,
+		.ts_high_mask	= TS_HI_BIT << TS_HI_SHIFT,
+		.ts_shift	= dma_ts_shift,
+		.ts_shift_num	= ARRAY_SIZE(dma_ts_shift),
+		.dmaor_init	= DMAOR_DME,
+		.chclr_present	= 1,
+		.chclr_bitwise	= 1,
+		.fourty_bits_addr = 1,
+	},
 };
 
 static struct resource r8a7743_sys_dmac_resources[] = {
 	/* Channel registers and DMAOR for low */
 	DEFINE_RES_MEM(0xe6700020, 0x8763 - 0x20),
 	DEFINE_RES_IRQ(gic_spi(197)),
-	DEFINE_RES_NAMED(gic_spi(200), 15, NULL, IORESOURCE_IRQ),
+	DEFINE_RES_NAMED(gic_spi(201), 14, NULL, IORESOURCE_IRQ),
 
 	/* Channel registers and DMAOR for high */
 	DEFINE_RES_MEM(0xe6720020, 0x8763 - 0x20),
@@ -287,8 +322,8 @@ static struct resource r8a7743_sys_dmac_resources[] = {
 	platform_device_register_resndata(			\
 		&platform_bus, "sh-dma-engine", 2 + id,		\
 		&r8a7743_sys_dmac_resources[id * 3],	id * 1 + 3,	\
-		&r8a7743_sys_dmac_platform_data,		\
-		sizeof(r8a7743_sys_dmac_platform_data))
+		&r8a7743_sys_dmac_platform_data[id],		\
+		sizeof(r8a7743_sys_dmac_platform_data[id]))
 
 static void __init skrzg1m_add_dmac_prototype(void)
 {
